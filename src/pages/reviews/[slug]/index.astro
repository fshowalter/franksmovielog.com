---
import { allReviews, getContentPlainText } from "~/api/reviews";
import { getProps } from "~/components/Review/getProps";
import { Review } from "~/components/Review/Review";
import Layout from "~/layouts/Layout.astro";

interface Props {
  contextPlainText: string;
  slug: string;
}

export async function getStaticPaths() {
  const { reviews } = await allReviews();

  return await Promise.all(
    reviews.map(async (review) => {
      return {
        params: {
          slug: review.slug,
        },
        props: {
          contextPlainText: getContentPlainText(review.rawContent),
          slug: review.slug,
        },
      };
    }),
  );
}

const { contextPlainText, slug } = Astro.props;

const props = await getProps(slug);

//trim the string to the maximum length
var description = contextPlainText
  .replaceAll(/\r?\n|\r/g, " ")
  .slice(0, Math.max(0, 160));

//re-trim if we are in the middle of a word
description = description.slice(
  0,
  Math.max(0, Math.min(description.length, description.lastIndexOf(" "))),
);
---

<Layout
  article={true}
  canonical={true}
  description={description}
  title={`${props.value.title} (${props.value.year})`}
>
  <Review {...props} />
</Layout>
