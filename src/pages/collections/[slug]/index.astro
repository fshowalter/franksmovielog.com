---
import React from "react";

import { allCollections } from "~/api/collections";
import AstroPageShell from "~/astro/AstroPageShell.astro";
import { Backdrop, BreadcrumbLink } from "~/components/backdrop/Backdrop";
import { Layout as ComponentLayout } from "~/components/layout/Layout";
import { CollectionTitlesStrictWrapper } from "~/features/collection-titles/CollectionTitles";
import { getProps } from "~/features/collection-titles/getProps";

interface Props {
  slug: string;
}

export async function getStaticPaths() {
  const { collections } = await allCollections();

  return collections.map((collection) => {
    return {
      params: {
        slug: collection.slug,
      },
      props: {
        slug: collection.slug,
      },
    };
  });
}

const { slug } = Astro.props;

const props = await getProps(slug);

// Separate layout props from interactive props
const {
  backdropImageProps,
  description,
  descriptionHtml,
  name,
  ...interactiveProps
} = props;

const breadcrumb = React.createElement(BreadcrumbLink, {
  children: "Collections",
  href: "/collections/",
});

const deckElement = React.createElement("span", {
  dangerouslySetInnerHTML: { __html: descriptionHtml },
});
---

<AstroPageShell
  canonical={true}
  meta={{
    description: `${name} movie reviews: ${description} Sort by oldest or newest, best or worst, or title.`,
  }}
  openGraph={{
    description: description || "",
    type: "website",
  }}
  title={`${name} movie reviews`}
>
  <ComponentLayout className="bg-subtle">
    <Backdrop
      breadcrumb={breadcrumb}
      deck={deckElement}
      imageProps={backdropImageProps}
      title={name}
    />
    <CollectionTitlesStrictWrapper client:load props={interactiveProps} />
  </ComponentLayout>
</AstroPageShell>
