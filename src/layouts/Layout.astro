---
import "./tailwind.css";

type Meta = {
  description: string;
};

type OpenGraph = {
  description: string;
  type: "article" | "website";
};

type Props = {
  canonical: boolean;
  meta: Meta;
  openGraph: false | OpenGraph;
  title: string;
};

const siteMeta = {
  author: "Frank Showalter",
  title: "Frank's Movie Log",
};

const { canonical, meta, openGraph, title } = Astro.props;
let pageTitle;

pageTitle = title.startsWith(siteMeta.title)
  ? title
  : `${title} - ${siteMeta.title}`;

const canonicalUrl = `${import.meta.env.SITE}${new URL(Astro.request.url).pathname}`;
---

<!doctype html>
<html class="scroll-smooth" lang="en">
  <head>
    <meta charset="utf-8" />
    <meta content="width=device-width" name="viewport" />
    {canonical && <link href={canonicalUrl} rel="canonical" />}
    <link href="/favicon.ico" rel="icon" sizes="48x48" />
    <link href="/favicon.svg" rel="icon" sizes="any" type="image/svg+xml" />
    <link href="/apple-touch-icon.png" rel="apple-touch-icon" />
    <link href="/site.webmanifest" rel="manifest" />
    <link href="/sitemap-index.xml" rel="sitemap" />
    <meta content={meta.description} name="description" />
    <slot name="meta-theme-color">
      <meta content="rgba(0,0,0,.85)" name="theme-color" />
    </slot>
    <link
      href={new URL("feed.xml", import.meta.env.SITE)}
      rel="alternate"
      title={siteMeta.title}
      type="application/rss+xml"
    />
    {
      openGraph && (
        <>
          <meta content={`${canonicalUrl}og.jpg`} property="og:image" />
          <meta content={`${canonicalUrl}`} property="og:url" />
          <meta content={title} property="og:title" />
          <meta content={openGraph.description} property="og:description" />
          <meta content={openGraph.type} property="og:type" />
        </>
      )
    }
    <title>{pageTitle}</title>
  </head>
  <body
    class={`
      h-full w-full bg-canvas text-default
      data-search-modal-open:overflow-hidden data-search-modal-open:before:fixed
      data-search-modal-open:before:inset-0
      data-search-modal-open:before:z-search-backdrop
      data-search-modal-open:before:backdrop-blur-xs
      [&.nav-open]:overflow-hidden
    `}
  >
    <slot />
    <dialog
      aria-label="Search"
      class={`
        fixed inset-x-4 m-auto h-screen w-full rounded-lg border border-default
        bg-default shadow-lg
        backdrop:bg-[#000] backdrop:opacity-40
        open:flex open:flex-col
        tablet:mx-auto tablet:mt-16 tablet:h-min
        tablet:max-h-[min(100vh-128px,900px)] tablet:min-h-60
        tablet:max-w-[min(100vw-64px,36rem)] tablet:rounded-xl
        laptop:min-h-0
      `}
    >
      <div class="contents" data-dialog-frame>
        <button
          class={`
            absolute right-[var(--search-dialog-padding)] z-sticky mt-5
            h-[calc(24px_*_var(---pagefind-ui-scale))] cursor-pointer
            border-none bg-subtle px-2 font-mono text-xs font-light text-muted
            hover:bg-inverse hover:text-inverse
            focus:outline-accent
          `}
          data-close-modal>ESC</button
        >
        <div class="contents">
          <div id="pagefind__search"></div>
        </div>

        <div
          class={`
            hidden px-(--search-dialog-padding) py-4 font-sans text-xs
            font-light tracking-wide text-subtle
            laptop:block
          `}
        >
          <kbd class="rounded-md bg-default p-2 font-mono text-xs text-subtle"
            >Tab</kbd
          > to navigate
          <kbd
            class="ml-4 rounded-md bg-default p-2 font-mono text-xs text-subtle"
            >ESC</kbd
          > to close
        </div>
      </div>
    </dialog>
  </body>
</html>
<script src="./pageFind.ts"></script>
<script src="./navMenu.ts"></script>
